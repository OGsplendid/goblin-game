{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5Be;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACVyC;AACH;;AAEvB;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,wDAAO;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,sDAAM;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UClFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNwD;AAC9B;;AAE1B,kBAAkB,yEAAK;AACvB","sources":["webpack://goblin-game/./src/css/style.css?6b7b","webpack://goblin-game/./src/components/counter/Counter.js","webpack://goblin-game/./src/components/goblin/Goblin.js","webpack://goblin-game/./src/components/table-rendering/Table.js","webpack://goblin-game/webpack/bootstrap","webpack://goblin-game/webpack/runtime/define property getters","webpack://goblin-game/webpack/runtime/hasOwnProperty shorthand","webpack://goblin-game/webpack/runtime/make namespace object","webpack://goblin-game/./src/js/app.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","export default class Counter {\n  constructor(element) {\n    this.element = element;\n\n    this.failsCount = 0;\n    this.count = this.element.querySelector('.count');\n  }\n\n  set failsCount(number) {\n    this._failsCount = number;\n  }\n\n  get failsCount() {\n    return this._failsCount;\n  }\n\n  increaseCount() {\n    this.count.textContent = Number(this.count.textContent) + 1;\n  }\n\n  increaseFailsCount() {\n    this.failsCount += 1;\n  }\n\n  reset() {\n    this.count.textContent = 0;\n    this.failsCount = 0;\n  }\n}\n","export default class Goblin {\n  constructor(element) {\n    this.element = element;\n  }\n\n  appear() {\n    this.element.classList.add('goblin');\n    this.element.src = 'https://github.com/netology-code/ahj-homeworks/blob/AHJ-50/dom/pic/goblin.png?raw=true';\n    return this.element;\n  }\n}\n","import Counter from '../counter/Counter';\nimport Goblin from '../goblin/Goblin';\n\nexport default class Table {\n  constructor(element) {\n    this.element = element;\n    this.interval = null;\n    this.failsCount = 0;\n\n    this.cells = [...this.element.querySelectorAll('.cell')];\n    this.reminder = document.querySelector('.reminder');\n    this.scoreCounter = new Counter(document.querySelector('.counter'));\n\n    this.onCellClick = this.onCellClick.bind(this);\n    this.element.addEventListener('click', this.onCellClick);\n    this.reminder = document.querySelector('.reminder');\n\n    this.reminder.onclick = () => {\n      this.scoreCounter.reset();\n      this.startGame();\n    };\n  }\n\n  static createGoblinElement() {\n    const goblinElement = new Goblin(document.createElement('img'));\n    return goblinElement.appear();\n  }\n\n  findProperIndex() {\n    const activeCellIndex = this.cells.findIndex((cell) => cell.classList.contains('active'));\n    const index = Math.floor(1 + Math.random() * 15);\n\n    if (activeCellIndex === index) {\n      this.findProperIndex();\n    }\n    return index;\n  }\n\n  rotate() {\n    this.interval = setInterval(() => {\n      if (!this.element.querySelector('.goblin')) {\n        this.goblinElement = Table.createGoblinElement();\n      }\n      if (!this.element.classList.contains('hit')) {\n        this.scoreCounter.increaseFailsCount();\n      }\n      this.element.classList.remove('hit');\n      const previousIndex = this.cells.findIndex((el) => el.classList.contains('active'));\n      const index = this.findProperIndex();\n      this.cells[previousIndex].classList.remove('active');\n      this.cells[index].classList.add('active');\n      this.cells[index].appendChild(this.goblinElement);\n      this.checkGameStatus();\n    }, 1000);\n  }\n\n  checkGameStatus() {\n    if (this.scoreCounter.failsCount > 5) {\n      this.endGame();\n      this.reminder.classList.remove('hidden');\n    }\n  }\n\n  startGame() {\n    this.reminder.classList.add('hidden');\n    this.scoreCounter.reset();\n    this.rotate();\n  }\n\n  endGame() {\n    clearInterval(this.interval);\n    document.querySelector('.goblin').remove();\n  }\n\n  onCellClick(e) {\n    const targetCell = e.target.closest('.cell');\n    if (targetCell.querySelector('.goblin')) {\n      this.scoreCounter.increaseCount();\n      this.element.classList.add('hit');\n      targetCell.querySelector('.goblin').remove();\n    }\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Table from '../components/table-rendering/Table';\nimport '../css/style.css';\n\nconst table = new Table(document.querySelector('.table'));\ntable.startGame();\n"],"names":[],"sourceRoot":""}